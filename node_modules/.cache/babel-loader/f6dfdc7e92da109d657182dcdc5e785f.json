{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebenezernu\\\\Documents\\\\MyProjects\\\\React\\\\react-complete-guide2\\\\fetch-movies-project\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const btnRef = useRef();\n  const fetchMoviesHandler = () => {\n    console.log(\"Fetching movies ...\");\n    btnRef.current.disabled = true;\n    setLoading(true);\n    setError(false);\n    fetch(\"https://swapi.dev/api/films\").then(response => {\n      console.log(\"Received response ...\");\n      if (!response.ok) {\n        throw Error(\"Failed to fetch movies\");\n      }\n      return response.json();\n    }).then(data => {\n      let id = 1;\n      console.log(\"Res\", data);\n      if (data.results.length > 0) {\n        const movies = data.results.map(movie => {\n          return {\n            id: id++,\n            title: movie.title,\n            openingText: movie.opening_crawl,\n            releaseDate: movie.release_date\n          };\n        });\n        setError(false);\n        setLoading(false);\n        setMovieList(movies);\n      }\n    }).catch(() => {\n      console.log(\"Something went wrong\");\n      setError(true);\n      setLoading(false);\n    });\n    btnRef.current.disabled = false;\n  };\n  useEffect(() => {\n    console.log(\"\");\n  }, [btnRef.current.disabled]);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  });\n  if (loading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Loading ...\");\n  } else if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Something went wrong\");\n  } else if (movieList.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movieList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    });\n  } else if (movieList.length === 0) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"No movie found\");\n  } else {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Oops\");\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    ref: btnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, content));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","MoviesList","App","movieList","setMovieList","loading","setLoading","error","setError","btnRef","fetchMoviesHandler","console","log","current","disabled","fetch","then","response","ok","Error","json","data","id","results","length","movies","map","movie","title","openingText","opening_crawl","releaseDate","release_date","catch","content"],"sources":["C:/Users/ebenezernu/Documents/MyProjects/React/react-complete-guide2/fetch-movies-project/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const btnRef = useRef();\n  const fetchMoviesHandler = () => {\n    console.log(\"Fetching movies ...\");\n    btnRef.current.disabled = true;\n    setLoading(true);\n    setError(false);\n    fetch(\"https://swapi.dev/api/films\")\n      .then((response) => {\n        console.log(\"Received response ...\");\n        if (!response.ok) {\n          throw Error(\"Failed to fetch movies\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        let id = 1;\n        console.log(\"Res\", data);\n        if (data.results.length > 0) {\n          const movies = data.results.map((movie) => {\n            return {\n              id: id++,\n              title: movie.title,\n              openingText: movie.opening_crawl,\n              releaseDate: movie.release_date,\n            };\n          });\n          setError(false);\n          setLoading(false);\n          setMovieList(movies);\n        }\n      })\n      .catch(() => {\n        console.log(\"Something went wrong\");\n        setError(true);\n        setLoading(false);\n      });\n    btnRef.current.disabled = false;\n  };\n\n  useEffect(() => {\n    console.log(\"\")\n  }, [btnRef.current.disabled]);\n  let content = <p></p>;\n  if (loading) {\n    content = <p>Loading ...</p>;\n  } else if (error) {\n    content = <p>Something went wrong</p>;\n  } else if (movieList.length > 0) {\n    content = <MoviesList movies={movieList} />;\n  } else if (movieList.length === 0) {\n    content = <p>No movie found</p>;\n  } else {\n    content = <p>Oops</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler} ref={btnRef}>\n          Fetch Movies\n        </button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}